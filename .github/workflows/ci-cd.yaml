name: Build, Push, and Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup JDK for the Spring Boot build
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      # Build the Spring Boot project with Maven
      - name: Build with Maven
        run: mvn clean package

      # Configure AWS credentials for AWS CLI operations
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Login to Amazon ECR Public (since a public repository is used)
      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      # Build and push Docker image, and set the image as an output for later steps
      - name: Build and push Docker image
        id: docker_build
        run: |
          IMAGE_URI=public.ecr.aws/g7n2o3k3/project-1:latest
          echo "Building image ${IMAGE_URI}"
          docker build -t $IMAGE_URI .
          echo "Pushing image ${IMAGE_URI}"
          docker push $IMAGE_URI
          echo "::set-output name=image::$IMAGE_URI"

      # Update the ECS Task Definition with the new image URI
      - name: Update ECS Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: part2-container
          image: ${{ steps.docker_build.outputs.image }}

      # Deploy the updated task definition to ECS
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          aws-region: us-west-2
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: service
          cluster: Proj1Part2Cluster
          wait-for-service-stability: true
